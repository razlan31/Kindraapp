{cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-02', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-02', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-07-02: {dayChecking: '2025-07-02', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-02', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-02', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-07-03: {dayChecking: '2025-07-03', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-03', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-03', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-07-03: {dayChecking: '2025-07-03', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-03', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-03', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-07-04: {dayChecking: '2025-07-04', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-04', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-04', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-07-04: {dayChecking: '2025-07-04', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-04', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-04', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-07-05: {dayChecking: '2025-07-05', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-05', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-05', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-07-05: {dayChecking: '2025-07-05', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-05', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-05', isMatch: true}
Console.js:61 MomentModal render - momentModalOpen: false
Console.js:61 getCurrentUser successful: {id: '8', email: 'jagohtrade@gmail.com', firstName: null, lastName: null, profileImageUrl: null,¬†‚Ä¶}
Console.js:61 getCurrentUser successful: {id: '8', email: 'jagohtrade@gmail.com', firstName: null, lastName: null, profileImageUrl: null,¬†‚Ä¶}
Console.js:61 Auth context setting user: {id: '8', email: 'jagohtrade@gmail.com', firstName: null, lastName: null, profileImageUrl: null,¬†‚Ä¶}
Console.js:61 Auth: Finally block - setting loading to false
Console.js:61 Filtered out moment 69 - connection not selected 11 [30]
Console.js:61 Filtered out moment 63 - connection not selected 9 [30]
Console.js:61 Filtered out moment 140 - connection not selected 6 [30]
Console.js:61 Filtered out moment 141 - connection not selected 10 [30]
Console.js:61 Filtered out moment 139 - connection not selected 9 [30]
Console.js:61 Filtered out moment 138 - connection not selected 17 [30]
Console.js:61 Filtered out moment 137 - connection not selected 29 [30]
Console.js:61 Filtered out moment 136 - connection not selected 21 [30]
Console.js:61 Filtered out moment 135 - connection not selected 11 [30]
Console.js:61 Filtered out moment 134 - connection not selected 16 [30]
Console.js:61 Filtered out moment 133 - connection not selected 23 [30]
Console.js:61 Filtered out moment 132 - connection not selected 18 [30]
Console.js:61 Filtered out moment 131 - connection not selected 16 [30]
Console.js:61 Filtered out moment 130 - connection not selected 21 [30]
Console.js:61 Filtered out moment 129 - connection not selected 17 [30]
Console.js:61 Filtered out moment 128 - connection not selected 17 [30]
Console.js:61 Filtered out moment 127 - connection not selected 18 [30]
Console.js:61 Filtered out moment 126 - connection not selected 29 [30]
Console.js:61 Filtered out moment 125 - connection not selected 21 [30]
Console.js:61 Filtered out moment 124 - connection not selected 25 [30]
Console.js:61 Filtered out moment 123 - connection not selected 23 [30]
Console.js:61 Filtered out moment 122 - connection not selected 22 [30]
Console.js:61 Filtered out moment 121 - connection not selected 16 [30]
Console.js:61 Filtered out moment 120 - connection not selected 17 [30]
Console.js:61 Filtered out moment 119 - connection not selected 11 [30]
Console.js:61 Filtered out moment 118 - connection not selected 16 [30]
Console.js:61 Filtered out moment 117 - connection not selected 19 [30]
Console.js:61 Filtered out moment 116 - connection not selected 16 [30]
Console.js:61 Filtered out moment 115 - connection not selected 10 [30]
Console.js:61 Filtered out moment 114 - connection not selected 9 [30]
Console.js:61 Filtered out moment 113 - connection not selected 10 [30]
Console.js:61 Filtered out moment 112 - connection not selected 6 [30]
Console.js:61 Filtered out moment 110 - connection not selected 16 [30]
Console.js:61 Filtered out moment 109 - connection not selected 29 [30]
Console.js:61 Filtered out moment 108 - connection not selected 16 [30]
Console.js:61 Filtered out moment 107 - connection not selected 16 [30]
Console.js:61 Filtered out moment 106 - connection not selected 16 [30]
Console.js:61 Filtered out moment 105 - connection not selected 6 [30]
Console.js:61 Filtered out moment 104 - connection not selected 6 [30]
Console.js:61 Filtered out moment 103 - connection not selected 12 [30]
Console.js:61 Filtered out moment 102 - connection not selected 11 [30]
Console.js:61 Filtered out moment 101 - connection not selected 9 [30]
Console.js:61 Filtered out moment 46 - connection not selected 6 [30]
Console.js:61 Filtered out moment 60 - connection not selected 6 [30]
Console.js:61 Filtered out moment 59 - connection not selected 6 [30]
Console.js:61 Filtered out moment 58 - connection not selected 6 [30]
Console.js:61 Filtered out moment 57 - connection not selected 6 [30]
Console.js:61 Filtered out moment 56 - connection not selected 6 [30]
Console.js:61 Filtered out moment 55 - connection not selected 6 [30]
Console.js:61 Filtered out moment 54 - connection not selected 6 [30]
Console.js:61 Filtered out moment 53 - connection not selected 6 [30]
Console.js:61 Filtered out moment 52 - connection not selected 6 [30]
Console.js:61 Filtered out moment 49 - connection not selected 6 [30]
Console.js:61 Filtered out moment 51 - connection not selected 8 [30]
Console.js:61 Filtered out moment 50 - connection not selected 8 [30]
Console.js:61 Filtered out moment 80 - connection not selected 9 [30]
Console.js:61 Filtered out moment 47 - connection not selected 6 [30]
Console.js:61 Filtered out moment 79 - connection not selected 9 [30]
Console.js:61 Filtered out moment 78 - connection not selected 9 [30]
Console.js:61 Filtered out moment 77 - connection not selected 9 [30]
Console.js:61 Filtered out moment 76 - connection not selected 9 [30]
Console.js:61 Filtered out moment 75 - connection not selected 9 [30]
Console.js:61 Filtered out moment 90 - connection not selected 10 [30]
Console.js:61 Filtered out moment 100 - connection not selected 11 [30]
Console.js:61 Filtered out moment 74 - connection not selected 9 [30]
Console.js:61 Filtered out moment 45 - connection not selected 6 [30]
Console.js:61 Filtered out moment 44 - connection not selected 6 [30]
Console.js:61 Filtered out moment 89 - connection not selected 10 [30]
Console.js:61 Filtered out moment 111 - connection not selected 6 [30]
Console.js:61 Filtered out moment 73 - connection not selected 9 [30]
Console.js:61 Filtered out moment 99 - connection not selected 11 [30]
Console.js:61 Filtered out moment 88 - connection not selected 10 [30]
Console.js:61 Filtered out moment 72 - connection not selected 9 [30]
Console.js:61 Filtered out moment 87 - connection not selected 10 [30]
Console.js:61 Filtered out moment 71 - connection not selected 9 [30]
Console.js:61 Filtered out moment 98 - connection not selected 11 [30]
Console.js:61 Filtered out moment 86 - connection not selected 10 [30]
Console.js:61 Filtered out moment 70 - connection not selected 9 [30]
Console.js:61 Filtered out moment 83 - connection not selected 10 [30]
Console.js:61 Filtered out moment 62 - connection not selected 9 [30]
Console.js:61 Filtered out moment 61 - connection not selected 9 [30]
Console.js:61 Filtered out moment 85 - connection not selected 10 [30]
Console.js:61 Filtered out moment 97 - connection not selected 11 [30]
Console.js:61 Filtered out moment 82 - connection not selected 10 [30]
Console.js:61 Filtered out moment 96 - connection not selected 11 [30]
Console.js:61 Filtered out moment 81 - connection not selected 10 [30]
Console.js:61 Filtered out moment 84 - connection not selected 10 [30]
Console.js:61 Filtered out moment 95 - connection not selected 11 [30]
Console.js:61 Filtered out moment 65 - connection not selected 10 [30]
Console.js:61 Filtered out moment 64 - connection not selected 10 [30]
Console.js:61 Filtered out moment 94 - connection not selected 11 [30]
Console.js:61 Filtered out moment 93 - connection not selected 11 [30]
Console.js:61 Filtered out moment 92 - connection not selected 11 [30]
Console.js:61 Filtered out moment 91 - connection not selected 11 [30]
Console.js:61 Filtered out moment 68 - connection not selected 11 [30]
Console.js:61 Filtered out moment 67 - connection not selected 11 [30]
Console.js:61 Filtered out moment 66 - connection not selected 10 [30]
Console.js:61 üóìÔ∏è Calendar State: {currentDate: '2025-06-01', viewMode: 'monthly', viewStart: '2025-06-01', viewEnd: '2025-06-30', calendarDaysCount: 35,¬†‚Ä¶}
Console.js:61 Calendar Debug - Total moments: 0 []
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-01: {dayChecking: '2025-06-01', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-01', isMatch: true}
Console.js:61 üîç CALENDAR DEBUG - Connection 30 on 2025-06-01: {phaseInfo: {‚Ä¶}, menstrualFilterEnabled: true, connectionSelected: true, shouldShowEmoji: true}
Console.js:61 üö® JUNE 1ST CRITICAL DEBUG: {dayStr: '2025-06-01', selectedConnectionIds: Array(1), totalCycles: 19, connection30Cycles: Array(3)}
Console.js:61 üîç CALENDAR RENDER DEBUG - 2025-06-01: {menstrualFilterEnabled: true, momentsMilestonesCount: 0, shouldShowCycle: true, selectedConnectionIds: Array(1), cyclesAvailable: 19,¬†‚Ä¶}
Console.js:61 üîç CYCLE FILTER DEBUG - 2025-06-01 cycle 184: {connectionId: 30, cycleStart: '2025-07-27', cycleEnd: '2025-08-23', dayToCheck: '2025-06-01', isInRange: false,¬†‚Ä¶}
Console.js:61 üîç CYCLE FILTER DEBUG - 2025-06-01 cycle 185: {connectionId: 30, cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-06-01', isInRange: false,¬†‚Ä¶}
Console.js:61 üîç CYCLE FILTER DEBUG - 2025-06-01 cycle 160: {connectionId: 30, cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-01', isInRange: true,¬†‚Ä¶}
Console.js:61 üîç FOUND ACTIVE CYCLES - 2025-06-01: {cycleCount: 1, cycles: Array(1)}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-01: {dayChecking: '2025-06-01', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-01', isMatch: true}
Console.js:61 üîç EMOJI SELECTION DEBUG - 2025-06-01: {phase: 'menstrual', subPhase: 'heavy_flow', aboutToReturn: 'ü©∏'}
Console.js:61 üîç EMOJI DEBUG - Final emoji rendering for 2025-06-01: {cycleId: 160, connectionId: 30, phaseInfo: {‚Ä¶}, emoji: 'ü©∏', willRender: true,¬†‚Ä¶}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-02: {dayChecking: '2025-06-02', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-02', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-02: {dayChecking: '2025-06-02', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-02', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-03: {dayChecking: '2025-06-03', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-03', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-03: {dayChecking: '2025-06-03', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-03', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-04: {dayChecking: '2025-06-04', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-04', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-04: {dayChecking: '2025-06-04', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-04', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-05: {dayChecking: '2025-06-05', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-05', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-05: {dayChecking: '2025-06-05', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-05', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-06: {dayChecking: '2025-06-06', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-06', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-06: {dayChecking: '2025-06-06', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-06', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-07: {dayChecking: '2025-06-07', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-07', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-07: {dayChecking: '2025-06-07', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-07', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-08: {dayChecking: '2025-06-08', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-08', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-08: {dayChecking: '2025-06-08', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-08', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-09: {dayChecking: '2025-06-09', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-09', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-09: {dayChecking: '2025-06-09', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-09', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-10: {dayChecking: '2025-06-10', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-10', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-10: {dayChecking: '2025-06-10', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-10', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-11: {dayChecking: '2025-06-11', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-11', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-11: {dayChecking: '2025-06-11', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-11', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-12: {dayChecking: '2025-06-12', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-12', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-12: {dayChecking: '2025-06-12', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-12', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-13: {dayChecking: '2025-06-13', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-13', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-13: {dayChecking: '2025-06-13', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-13', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-14: {dayChecking: '2025-06-14', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-14', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-14: {dayChecking: '2025-06-14', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-14', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-15: {dayChecking: '2025-06-15', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-15', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-15: {dayChecking: '2025-06-15', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-15', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-16: {dayChecking: '2025-06-16', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-16', isMatch: true}
Console.js:61 üîç June 16th final styling: {isToday: false, cycleDisplay: {‚Ä¶}, cycleDisplayColor: 'bg-purple-50 dark:bg-purple-900/20 border-purple-200 dark:border-purple-600 opacity-50', cyclesLength: 19, finalClassName: 'h-16 p-1 border rounded-lg transition-colors hover‚Ä¶dark:border-purple-600 opacity-50 border-2  block',¬†‚Ä¶}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-16: {dayChecking: '2025-06-16', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-16', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-17: {dayChecking: '2025-06-17', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-17', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-17: {dayChecking: '2025-06-17', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-17', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-18: {dayChecking: '2025-06-18', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-18', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-18: {dayChecking: '2025-06-18', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-18', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-19: {dayChecking: '2025-06-19', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-19', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-19: {dayChecking: '2025-06-19', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-19', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-20: {dayChecking: '2025-06-20', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-20', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-20: {dayChecking: '2025-06-20', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-20', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-21: {dayChecking: '2025-06-21', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-21', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-21: {dayChecking: '2025-06-21', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-21', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-22: {dayChecking: '2025-06-22', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-22', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-22: {dayChecking: '2025-06-22', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-22', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-23: {dayChecking: '2025-06-23', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-23', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-23: {dayChecking: '2025-06-23', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-23', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-24: {dayChecking: '2025-06-24', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-24', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-24: {dayChecking: '2025-06-24', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-24', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-25: {dayChecking: '2025-06-25', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-25', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-25: {dayChecking: '2025-06-25', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-25', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-26: {dayChecking: '2025-06-26', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-26', isMatch: true}
Console.js:61 üîç CYCLE UTILS DEBUG - Phase calculation for cycle 160: {dayInCycle: 26, cycleLength: 28, periodEnd: '2025-06-04', aboutToCallGetCycleDisplayInfo: true}
Console.js:61 üîç EMOJI DEBUG - getDetailedCyclePhase result: {dayInCycle: 26, cycleLength: 28, periodLength: 4, detailedPhase: {‚Ä¶}}
Console.js:61 üîç EMOJI DEBUG - Connection 30 on June 26th: getCyclePhaseForDay returned: {phase: 'luteal', subPhase: 'late_luteal', day: 26, cycle: {‚Ä¶}, isOvulation: false,¬†‚Ä¶}
Console.js:61 üîç EMOJI DEBUG - detailedInfo: {phase: 'luteal', emoji: 'üåô', color: 'bg-purple-100 dark:bg-purple-900/30 border-purple-300 dark:border-purple-500 opacity-50', description: 'Late luteal phase (PMS)'}
Console.js:61 üîç EMOJI DEBUG - June 26th: cyclePhases[0]: {phase: 'luteal', subPhase: 'late_luteal', day: 26, cycle: {‚Ä¶}, isOvulation: false,¬†‚Ä¶}
Console.js:61 üîç EMOJI DEBUG - June 26th: getCycleDisplayInfo result: {color: 'bg-purple-100 dark:bg-purple-900/30 border-purple-300 dark:border-purple-500 opacity-50', indicator: 'üåô', title: 'Day 26 - Late luteal phase (PMS)', description: 'Late luteal phase (PMS)', hormonalProfile: 'Declining hormones, PMS symptoms',¬†‚Ä¶}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-26: {dayChecking: '2025-06-26', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-26', isMatch: true}
Console.js:61 üîç CYCLE UTILS DEBUG - Phase calculation for cycle 160: {dayInCycle: 26, cycleLength: 28, periodEnd: '2025-06-04', aboutToCallGetCycleDisplayInfo: true}
Console.js:61 üîç EMOJI DEBUG - getDetailedCyclePhase result: {dayInCycle: 26, cycleLength: 28, periodLength: 4, detailedPhase: {‚Ä¶}}
Console.js:61 üîç CALENDAR DEBUG - Single cycle emoji logic: {cycleId: 160, connectionId: 30, phaseInfo: {‚Ä¶}, cyclesPassedToFunction: 19}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-27: {dayChecking: '2025-06-27', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-27', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-27: {dayChecking: '2025-06-27', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-27', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-28: {dayChecking: '2025-06-28', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-28', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-28: {dayChecking: '2025-06-28', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-28', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-29: {dayChecking: '2025-06-29', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-29', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-06-29', isMatch: true}
Console.js:61 üîç CALENDAR DEBUG - Connection 30 on 2025-06-29: {phaseInfo: {‚Ä¶}, menstrualFilterEnabled: true, connectionSelected: true, shouldShowEmoji: true}
Console.js:61 üîç CALENDAR RENDER DEBUG - 2025-06-29: {menstrualFilterEnabled: true, momentsMilestonesCount: 0, shouldShowCycle: true, selectedConnectionIds: Array(1), cyclesAvailable: 19,¬†‚Ä¶}
Console.js:61 üîç CYCLE FILTER DEBUG - 2025-06-29 cycle 184: {connectionId: 30, cycleStart: '2025-07-27', cycleEnd: '2025-08-23', dayToCheck: '2025-06-29', isInRange: false,¬†‚Ä¶}
Console.js:61 üîç CYCLE FILTER DEBUG - 2025-06-29 cycle 185: {connectionId: 30, cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-06-29', isInRange: true,¬†‚Ä¶}
Console.js:61 üîç CYCLE FILTER DEBUG - 2025-06-29 cycle 160: {connectionId: 30, cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-29', isInRange: false,¬†‚Ä¶}
Console.js:61 üîç FOUND ACTIVE CYCLES - 2025-06-29: {cycleCount: 1, cycles: Array(1)}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-29: {dayChecking: '2025-06-29', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-29', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-06-29', isMatch: true}
Console.js:61 üîç EMOJI SELECTION DEBUG - 2025-06-29: {phase: 'menstrual', subPhase: 'heavy_flow', aboutToReturn: 'ü©∏'}
Console.js:61 üîç EMOJI DEBUG - Final emoji rendering for 2025-06-29: {cycleId: 185, connectionId: 30, phaseInfo: {‚Ä¶}, emoji: 'ü©∏', willRender: true,¬†‚Ä¶}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-30: {dayChecking: '2025-06-30', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-30', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-06-30', isMatch: true}
Console.js:61 üîç CALENDAR DEBUG - Connection 30 on 2025-06-30: {phaseInfo: {‚Ä¶}, menstrualFilterEnabled: true, connectionSelected: true, shouldShowEmoji: true}
Console.js:61 üîç CALENDAR RENDER DEBUG - 2025-06-30: {menstrualFilterEnabled: true, momentsMilestonesCount: 0, shouldShowCycle: true, selectedConnectionIds: Array(1), cyclesAvailable: 19,¬†‚Ä¶}
Console.js:61 üîç CYCLE FILTER DEBUG - 2025-06-30 cycle 184: {connectionId: 30, cycleStart: '2025-07-27', cycleEnd: '2025-08-23', dayToCheck: '2025-06-30', isInRange: false,¬†‚Ä¶}
Console.js:61 üîç CYCLE FILTER DEBUG - 2025-06-30 cycle 185: {connectionId: 30, cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-06-30', isInRange: true,¬†‚Ä¶}
Console.js:61 üîç CYCLE FILTER DEBUG - 2025-06-30 cycle 160: {connectionId: 30, cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-30', isInRange: false,¬†‚Ä¶}
Console.js:61 üîç FOUND ACTIVE CYCLES - 2025-06-30: {cycleCount: 1, cycles: Array(1)}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-30: {dayChecking: '2025-06-30', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-30', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-06-30', isMatch: true}
Console.js:61 üîç EMOJI SELECTION DEBUG - 2025-06-30: {phase: 'menstrual', subPhase: 'heavy_flow', aboutToReturn: 'ü©∏'}
Console.js:61 üîç EMOJI DEBUG - Final emoji rendering for 2025-06-30: {cycleId: 185, connectionId: 30, phaseInfo: {‚Ä¶}, emoji: 'ü©∏', willRender: true,¬†‚Ä¶}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-07-01: {dayChecking: '2025-07-01', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-01', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-01', isMatch: true}
Console.js:61 üîç CALENDAR DEBUG - Connection 30 on 2025-07-01: {phaseInfo: {‚Ä¶}, menstrualFilterEnabled: true, connectionSelected: true, shouldShowEmoji: true}
Console.js:61 üîç CALENDAR RENDER DEBUG - 2025-07-01: {menstrualFilterEnabled: true, momentsMilestonesCount: 0, shouldShowCycle: true, selectedConnectionIds: Array(1), cyclesAvailable: 19,¬†‚Ä¶}
Console.js:61 üîç CYCLE FILTER DEBUG - 2025-07-01 cycle 184: {connectionId: 30, cycleStart: '2025-07-27', cycleEnd: '2025-08-23', dayToCheck: '2025-07-01', isInRange: false,¬†‚Ä¶}
Console.js:61 üîç CYCLE FILTER DEBUG - 2025-07-01 cycle 185: {connectionId: 30, cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-01', isInRange: true,¬†‚Ä¶}
Console.js:61 üîç CYCLE FILTER DEBUG - 2025-07-01 cycle 160: {connectionId: 30, cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-01', isInRange: false,¬†‚Ä¶}
Console.js:61 üîç FOUND ACTIVE CYCLES - 2025-07-01: {cycleCount: 1, cycles: Array(1)}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-07-01: {dayChecking: '2025-07-01', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-01', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-01', isMatch: true}
Console.js:61 üîç EMOJI SELECTION DEBUG - 2025-07-01: {phase: 'menstrual', subPhase: 'light_flow', aboutToReturn: 'ü©∏'}
Console.js:61 üîç EMOJI DEBUG - Final emoji rendering for 2025-07-01: {cycleId: 185, connectionId: 30, phaseInfo: {‚Ä¶}, emoji: 'ü©∏', willRender: true,¬†‚Ä¶}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-07-02: {dayChecking: '2025-07-02', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-02', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-02', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-07-02: {dayChecking: '2025-07-02', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-02', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-02', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-07-03: {dayChecking: '2025-07-03', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-03', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-03', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-07-03: {dayChecking: '2025-07-03', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-03', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-03', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-07-04: {dayChecking: '2025-07-04', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-04', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-04', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-07-04: {dayChecking: '2025-07-04', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-04', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-04', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-07-05: {dayChecking: '2025-07-05', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-05', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-05', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-07-05: {dayChecking: '2025-07-05', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-05', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-05', isMatch: true}
Console.js:61 MomentModal render - momentModalOpen: false
Console.js:61 üîç CYCLE TRACKER RENDER DEBUG: {selectedConnectionIds: Array(0), selectedConnectionIdsLength: 0, includes30: false, trackablePersons: Array(20)}
Console.js:61 üîç FOCUS SYNC - Setting selectedConnectionIds to [30]
Console.js:61 üîç CYCLE TRACKER RENDER DEBUG: {selectedConnectionIds: Array(1), selectedConnectionIdsLength: 1, includes30: true, trackablePersons: Array(20)}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-26: {dayChecking: '2025-06-26', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-26', isMatch: true}
Console.js:61 üîç CYCLE UTILS DEBUG - Phase calculation for cycle 160: {dayInCycle: 26, cycleLength: 28, periodEnd: '2025-06-04', aboutToCallGetCycleDisplayInfo: true}
Console.js:61 üîç EMOJI DEBUG - getDetailedCyclePhase result: {dayInCycle: 26, cycleLength: 28, periodLength: 4, detailedPhase: {‚Ä¶}}
Console.js:61 üîç CYCLE TRACKER - Using cycle 160 for today (2025-06-26): {day: 26, phase: 'luteal', emoji: 'üåô', cycleStart: '2025-06-01', cycleEnd: '2025-06-28'}
Console.js:61 üîç CYCLE TRACKER DEBUG - Connection 30: {avgCycleLength: 28, currentDay: 26, periodLength: 4, ovulationDay: 14, currentCycleId: 160,¬†‚Ä¶}
Console.js:61 üîç EMOJI RENDER DEBUG: {hasCurrentPhaseInfo: true, hasDetailedInfo: true, emoji: 'üåô', phase: 'luteal', shouldShowEmoji: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-02: {dayChecking: '2025-06-02', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-02', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-03: {dayChecking: '2025-06-03', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-03', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-04: {dayChecking: '2025-06-04', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-04', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-05: {dayChecking: '2025-06-05', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-05', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-06: {dayChecking: '2025-06-06', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-06', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-07: {dayChecking: '2025-06-07', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-07', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-08: {dayChecking: '2025-06-08', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-08', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-09: {dayChecking: '2025-06-09', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-09', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-10: {dayChecking: '2025-06-10', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-10', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-11: {dayChecking: '2025-06-11', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-11', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-12: {dayChecking: '2025-06-12', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-12', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-13: {dayChecking: '2025-06-13', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-13', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-14: {dayChecking: '2025-06-14', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-14', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-15: {dayChecking: '2025-06-15', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-15', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-16: {dayChecking: '2025-06-16', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-16', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-17: {dayChecking: '2025-06-17', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-17', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-18: {dayChecking: '2025-06-18', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-18', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-19: {dayChecking: '2025-06-19', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-19', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-20: {dayChecking: '2025-06-20', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-20', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-21: {dayChecking: '2025-06-21', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-21', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-22: {dayChecking: '2025-06-22', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-22', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-23: {dayChecking: '2025-06-23', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-23', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-24: {dayChecking: '2025-06-24', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-24', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-25: {dayChecking: '2025-06-25', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-25', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-26: {dayChecking: '2025-06-26', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-26', isMatch: true}
Console.js:61 üîç CYCLE UTILS DEBUG - Phase calculation for cycle 160: {dayInCycle: 26, cycleLength: 28, periodEnd: '2025-06-04', aboutToCallGetCycleDisplayInfo: true}
Console.js:61 üîç EMOJI DEBUG - getDetailedCyclePhase result: {dayInCycle: 26, cycleLength: 28, periodLength: 4, detailedPhase: {‚Ä¶}}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-27: {dayChecking: '2025-06-27', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-27', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-28: {dayChecking: '2025-06-28', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-28', isMatch: true}
Console.js:61 üîç CYCLE PHASE DEBUG - Finding cycle for 2025-06-30: {dayChecking: '2025-06-30', availableCycles: Array(3)}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-30', isMatch: false}
Console.js:61 üîç CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-06-30', isMatch: true}
frame_ant.js:2 Uncaught (in promise) AbortError: The user aborted a request.
e @ frame_ant.js:2
s @ frame_ant.js:2
Promise.then
e @ frame_ant.js:2
u @ frame_ant.js:2
Promise.then
e @ frame_ant.js:2
u @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
s @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
(anonymous) @ _app-e8cd1b69c02bbb86.js:38
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
e.consumeQueue @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
n @ _app-e8cd1b69c02bbb86.js:38
setTimeout
(anonymous) @ _app-e8cd1b69c02bbb86.js:38
e.scheduleQueueConsumption @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
e.try @ _app-e8cd1b69c02bbb86.js:25
e.start @ _app-e8cd1b69c02bbb86.js:25
t.request @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
e.execute @ _app-e8cd1b69c02bbb86.js:14
e.getObservableFromLink @ _app-e8cd1b69c02bbb86.js:11
e.getResultsFromLink @ _app-e8cd1b69c02bbb86.js:11
v @ _app-e8cd1b69c02bbb86.js:11
e.fetchQueryByPolicy @ _app-e8cd1b69c02bbb86.js:11
v @ _app-e8cd1b69c02bbb86.js:11
e.fetchConcastWithInfo @ _app-e8cd1b69c02bbb86.js:11
t.fetch @ _app-e8cd1b69c02bbb86.js:14
t.reobserveAsConcast @ _app-e8cd1b69c02bbb86.js:14
e.executeQuery @ _app-e8cd1b69c02bbb86.js:26
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ 7447-58fd4ae583d8d5e7.js:1
(anonymous) @ 9303-d31bbf07f3e616c4.js:1
t.trigger @ 9303-d31bbf07f3e616c4.js:1
(anonymous) @ 9303-d31bbf07f3e616c4.js:1
(anonymous) @ main-0c8f5f7f56686043.js:1
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1Understand this error