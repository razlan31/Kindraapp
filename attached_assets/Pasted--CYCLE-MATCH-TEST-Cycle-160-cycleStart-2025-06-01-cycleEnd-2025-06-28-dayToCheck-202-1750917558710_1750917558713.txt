🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-25', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-26: {dayChecking: '2025-06-26', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-26', isMatch: true}
eruda.js:2 🔍 CYCLE UTILS DEBUG - Phase calculation for cycle 160: {dayInCycle: 26, cycleLength: 28, periodEnd: '2025-06-04', aboutToCallGetCycleDisplayInfo: true}
eruda.js:2 🔍 EMOJI DEBUG - getDetailedCyclePhase result: {dayInCycle: 26, cycleLength: 28, periodLength: 4, detailedPhase: {…}}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-27: {dayChecking: '2025-06-27', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-27', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-28: {dayChecking: '2025-06-28', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-28', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-30: {dayChecking: '2025-06-30', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-30', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-06-30', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-26: {dayChecking: '2025-06-26', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-26', isMatch: true}
eruda.js:2 🔍 CYCLE UTILS DEBUG - Phase calculation for cycle 160: {dayInCycle: 26, cycleLength: 28, periodEnd: '2025-06-04', aboutToCallGetCycleDisplayInfo: true}
eruda.js:2 🔍 EMOJI DEBUG - getDetailedCyclePhase result: {dayInCycle: 26, cycleLength: 28, periodLength: 4, detailedPhase: {…}}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-01: {dayChecking: '2025-07-01', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-01', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-01', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-02: {dayChecking: '2025-07-02', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-02', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-02', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-03: {dayChecking: '2025-07-03', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-03', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-03', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-04: {dayChecking: '2025-07-04', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-04', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-04', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-05: {dayChecking: '2025-07-05', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-05', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-05', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-06: {dayChecking: '2025-07-06', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-06', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-06', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-07: {dayChecking: '2025-07-07', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-07', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-07', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-08: {dayChecking: '2025-07-08', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-08', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-08', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-09: {dayChecking: '2025-07-09', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-09', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-09', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-10: {dayChecking: '2025-07-10', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-10', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-10', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-11: {dayChecking: '2025-07-11', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-11', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-11', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-12: {dayChecking: '2025-07-12', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-12', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-12', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-13: {dayChecking: '2025-07-13', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-13', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-13', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-14: {dayChecking: '2025-07-14', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-14', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-14', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-15: {dayChecking: '2025-07-15', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-15', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-15', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-16: {dayChecking: '2025-07-16', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-16', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-16', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-17: {dayChecking: '2025-07-17', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-17', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-17', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-18: {dayChecking: '2025-07-18', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-18', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-18', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-19: {dayChecking: '2025-07-19', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-19', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-19', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-20: {dayChecking: '2025-07-20', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-20', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-20', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-21: {dayChecking: '2025-07-21', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-21', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-21', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-22: {dayChecking: '2025-07-22', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-22', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-22', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-23: {dayChecking: '2025-07-23', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-23', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-23', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-24: {dayChecking: '2025-07-24', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-24', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-24', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-25: {dayChecking: '2025-07-25', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-25', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-25', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-26: {dayChecking: '2025-07-26', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-26', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-26', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-28: {dayChecking: '2025-07-28', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-28', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-28', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 184: {cycleStart: '2025-07-27', cycleEnd: '2025-08-23', dayToCheck: '2025-07-28', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-29: {dayChecking: '2025-07-29', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-29', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-29', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 184: {cycleStart: '2025-07-27', cycleEnd: '2025-08-23', dayToCheck: '2025-07-29', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-30: {dayChecking: '2025-07-30', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-30', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-30', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 184: {cycleStart: '2025-07-27', cycleEnd: '2025-08-23', dayToCheck: '2025-07-30', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-07-31: {dayChecking: '2025-07-31', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-07-31', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-07-31', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 184: {cycleStart: '2025-07-27', cycleEnd: '2025-08-23', dayToCheck: '2025-07-31', isMatch: true}
frame_ant.js:2 Uncaught (in promise) AbortError: The user aborted a request.
e @ frame_ant.js:2
s @ frame_ant.js:2
Promise.then
e @ frame_ant.js:2
u @ frame_ant.js:2
Promise.then
e @ frame_ant.js:2
u @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
s @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
(anonymous) @ _app-e8cd1b69c02bbb86.js:38
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
e.consumeQueue @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
n @ _app-e8cd1b69c02bbb86.js:38
setTimeout
(anonymous) @ _app-e8cd1b69c02bbb86.js:38
e.scheduleQueueConsumption @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
e.try @ _app-e8cd1b69c02bbb86.js:25
e.start @ _app-e8cd1b69c02bbb86.js:25
t.request @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
e.execute @ _app-e8cd1b69c02bbb86.js:14
e.getObservableFromLink @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:11
s @ _app-e8cd1b69c02bbb86.js:11
e.mutate @ _app-e8cd1b69c02bbb86.js:11
e.mutate @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
e.wait @ 7447-58fd4ae583d8d5e7.js:1
u @ 8830-dd20f3f5b16ef9ba.js:1
(anonymous) @ 8830-dd20f3f5b16ef9ba.js:1
n @ _app-e8cd1b69c02bbb86.js:38Understand this error
eruda.js:2 Theme context initial load: minimalist
eruda.js:2 🔥 STATE DEBUG - isSubmitting changed: false
eruda.js:2 🔥 STATE DEBUG - connectionId changed: 2 selectedConnectionId: null
eruda.js:2 Modal useEffect - selectedDate from context: null
eruda.js:2 Modal useEffect - editingMoment: null
eruda.js:2 Modal useEffect - momentModalOpen: false
eruda.js:2 🔥 MODAL OPEN - Resetting isSubmitting to false
eruda.js:2 🔥 MODAL INIT - Setting connectionId: 2 from selectedConnectionId: null
eruda.js:2 🔥 PLAN MODAL - Connection effect: {selectedConnection: null, localSelectedConnection: null, isOpen: false}
eruda.js:2 🔥 PLAN MODAL - Form init effect: {editingMoment: false, isOpen: false, selectedConnection: null, contextSelectedDate: null, connectionsCount: 20}
eruda.js:2 Focus Context Debug: {savedId: '30', connectionsLength: 20, connections: Array(20)}
eruda.js:2 Found saved connection: {id: 30, userId: '8', name: 'ghjghjhgjg', profileImage: null, relationshipStage: 'Dating', …}
eruda.js:2 Theme effect running: minimalist
eruda.js:2 Applied minimalist theme (light base)
eruda.js:2 Theme stored to localStorage: minimalist
eruda.js:2 Auth: Starting to load user, setting loading to true
eruda.js:2 getCurrentUser successful: {id: '8', email: 'jagohtrade@gmail.com', firstName: null, lastName: null, profileImageUrl: null, …}
eruda.js:2 getCurrentUser successful: {id: '8', email: 'jagohtrade@gmail.com', firstName: null, lastName: null, profileImageUrl: null, …}
eruda.js:2 Auth context setting user: {id: '8', email: 'jagohtrade@gmail.com', firstName: null, lastName: null, profileImageUrl: null, …}
eruda.js:2 Auth: Finally block - setting loading to false
frame_ant.js:2 Uncaught (in promise) AbortError: The user aborted a request.
e @ frame_ant.js:2
s @ frame_ant.js:2
Promise.then
e @ frame_ant.js:2
u @ frame_ant.js:2
Promise.then
e @ frame_ant.js:2
u @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
s @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
(anonymous) @ _app-e8cd1b69c02bbb86.js:38
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
e.consumeQueue @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
n @ _app-e8cd1b69c02bbb86.js:38
setTimeout
(anonymous) @ _app-e8cd1b69c02bbb86.js:38
e.scheduleQueueConsumption @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
e.try @ _app-e8cd1b69c02bbb86.js:25
e.start @ _app-e8cd1b69c02bbb86.js:25
t.request @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
e.execute @ _app-e8cd1b69c02bbb86.js:14
e.getObservableFromLink @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:11
s @ _app-e8cd1b69c02bbb86.js:11
e.mutate @ _app-e8cd1b69c02bbb86.js:11
e.mutate @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:40
(anonymous) @ main-0c8f5f7f56686043.js:1
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
(anonymous) @ main-0c8f5f7f56686043.js:1
(anonymous) @ main-0c8f5f7f56686043.js:1
n @ _app-e8cd1b69c02bbb86.js:38Understand this error
eruda.js:2 [vite] server connection lost. Polling for restart...
frame_ant.js:2 Uncaught (in promise) AbortError: The user aborted a request.
e @ frame_ant.js:2
s @ frame_ant.js:2
Promise.then
e @ frame_ant.js:2
u @ frame_ant.js:2
Promise.then
e @ frame_ant.js:2
u @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
s @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
(anonymous) @ _app-e8cd1b69c02bbb86.js:38
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
e.consumeQueue @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
n @ _app-e8cd1b69c02bbb86.js:38
setTimeout
(anonymous) @ _app-e8cd1b69c02bbb86.js:38
e.scheduleQueueConsumption @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
e.try @ _app-e8cd1b69c02bbb86.js:25
e.start @ _app-e8cd1b69c02bbb86.js:25
t.request @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
e.execute @ _app-e8cd1b69c02bbb86.js:14
e.getObservableFromLink @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:11
s @ _app-e8cd1b69c02bbb86.js:11
e.mutate @ _app-e8cd1b69c02bbb86.js:11
e.mutate @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ 7447-58fd4ae583d8d5e7.js:1
(anonymous) @ main-0c8f5f7f56686043.js:1
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
(anonymous) @ main-0c8f5f7f56686043.js:1
(anonymous) @ main-0c8f5f7f56686043.js:1
(anonymous) @ 7447-58fd4ae583d8d5e7.js:1
oO @ framework-0e64ecd5aaccf18c.js:1
uB @ framework-0e64ecd5aaccf18c.js:1
u_ @ framework-0e64ecd5aaccf18c.js:1
r6 @ framework-0e64ecd5aaccf18c.js:1
(anonymous) @ framework-0e64ecd5aaccf18c.js:1
uO @ framework-0e64ecd5aaccf18c.js:1
uS @ framework-0e64ecd5aaccf18c.js:1
C @ framework-0e64ecd5aaccf18c.js:1
z @ framework-0e64ecd5aaccf18c.js:1
(anonymous) @ setImmediate.js:40
y @ setImmediate.js:69
c @ setImmediate.js:109
postMessage
n @ setImmediate.js:120
push.YBdB.f.setImmediate @ setImmediate.js:27
r @ framework-0e64ecd5aaccf18c.js:1
z @ framework-0e64ecd5aaccf18c.js:1
(anonymous) @ setImmediate.js:40
y @ setImmediate.js:69
c @ setImmediate.js:109
postMessage
n @ setImmediate.js:120
push.YBdB.f.setImmediate @ setImmediate.js:27
r @ framework-0e64ecd5aaccf18c.js:1
I @ framework-0e64ecd5aaccf18c.js:1
t.unstable_scheduleCallback @ framework-0e64ecd5aaccf18c.js:1
uw @ framework-0e64ecd5aaccf18c.js:1
uk @ framework-0e64ecd5aaccf18c.js:1
lH @ framework-0e64ecd5aaccf18c.js:1
(anonymous) @ 9303-d31bbf07f3e616c4.js:1
n @ _app-e8cd1b69c02bbb86.js:11
update @ _app-e8cd1b69c02bbb86.js:11
m @ 7447-58fd4ae583d8d5e7.js:1
(anonymous) @ 7447-58fd4ae583d8d5e7.js:1
l.emit @ 2656-9a1010accad520d2.js:1
(anonymous) @ 8830-dd20f3f5b16ef9ba.js:1
(anonymous) @ 2656-9a1010accad520d2.js:1
handleCommand @ 2656-9a1010accad520d2.js:1
onSocketMessage @ 2656-9a1010accad520d2.js:1Understand this error
eruda.js:2 Theme context initial load: minimalist
eruda.js:2 Theme context initial load: minimalist
eruda.js:2 🔥 STATE DEBUG - isSubmitting changed: false
eruda.js:2 🔥 STATE DEBUG - connectionId changed: 2 selectedConnectionId: null
eruda.js:2 Modal useEffect - selectedDate from context: null
eruda.js:2 Modal useEffect - editingMoment: null
eruda.js:2 Modal useEffect - momentModalOpen: false
eruda.js:2 🔥 MODAL OPEN - Resetting isSubmitting to false
eruda.js:2 🔥 MODAL INIT - Setting connectionId: 2 from selectedConnectionId: null
eruda.js:2 🔥 PLAN MODAL - Connection effect: {selectedConnection: null, localSelectedConnection: null, isOpen: false}
eruda.js:2 🔥 PLAN MODAL - Form init effect: {editingMoment: false, isOpen: false, selectedConnection: null, contextSelectedDate: null, connectionsCount: 0}
eruda.js:2 Theme effect running: minimalist
eruda.js:2 Applied minimalist theme (light base)
eruda.js:2 Theme stored to localStorage: minimalist
eruda.js:2 Auth: Starting to load user, setting loading to true
eruda.js:2 Auth: Starting to load user, setting loading to true
eruda.js:2 Theme effect running: minimalist
eruda.js:2 Applied minimalist theme (light base)
eruda.js:2 Theme stored to localStorage: minimalist
eruda.js:2 🔥 PLAN MODAL - Form init effect: {editingMoment: false, isOpen: false, selectedConnection: null, contextSelectedDate: null, connectionsCount: 0}
eruda.js:2 🔥 PLAN MODAL - Form init effect: {editingMoment: false, isOpen: false, selectedConnection: null, contextSelectedDate: null, connectionsCount: 20}
eruda.js:2 Focus Context Debug: {savedId: '30', connectionsLength: 20, connections: Array(20)}
eruda.js:2 Found saved connection: {id: 30, userId: '8', name: 'ghjghjhgjg', profileImage: null, relationshipStage: 'Dating', …}
eruda.js:2 getCurrentUser successful: {id: '8', email: 'jagohtrade@gmail.com', firstName: null, lastName: null, profileImageUrl: null, …}
eruda.js:2 getCurrentUser successful: {id: '8', email: 'jagohtrade@gmail.com', firstName: null, lastName: null, profileImageUrl: null, …}
eruda.js:2 Auth context setting user: {id: '8', email: 'jagohtrade@gmail.com', firstName: null, lastName: null, profileImageUrl: null, …}
eruda.js:2 Auth: Finally block - setting loading to false
eruda.js:2 getCurrentUser successful: {id: '8', email: 'jagohtrade@gmail.com', firstName: null, lastName: null, profileImageUrl: null, …}
eruda.js:2 getCurrentUser successful: {id: '8', email: 'jagohtrade@gmail.com', firstName: null, lastName: null, profileImageUrl: null, …}
eruda.js:2 Auth context setting user: {id: '8', email: 'jagohtrade@gmail.com', firstName: null, lastName: null, profileImageUrl: null, …}
eruda.js:2 Auth: Finally block - setting loading to false
frame_ant.js:2 Uncaught (in promise) AbortError: The user aborted a request.
e @ frame_ant.js:2
s @ frame_ant.js:2
Promise.then
e @ frame_ant.js:2
u @ frame_ant.js:2
Promise.then
e @ frame_ant.js:2
u @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
s @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
(anonymous) @ _app-e8cd1b69c02bbb86.js:38
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
e.consumeQueue @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
n @ _app-e8cd1b69c02bbb86.js:38
setTimeout
(anonymous) @ _app-e8cd1b69c02bbb86.js:38
e.scheduleQueueConsumption @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
e.try @ _app-e8cd1b69c02bbb86.js:25
e.start @ _app-e8cd1b69c02bbb86.js:25
t.request @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
e.execute @ _app-e8cd1b69c02bbb86.js:14
e.getObservableFromLink @ _app-e8cd1b69c02bbb86.js:11
e.getResultsFromLink @ _app-e8cd1b69c02bbb86.js:11
v @ _app-e8cd1b69c02bbb86.js:11
e.fetchQueryByPolicy @ _app-e8cd1b69c02bbb86.js:11
v @ _app-e8cd1b69c02bbb86.js:11
e.fetchConcastWithInfo @ _app-e8cd1b69c02bbb86.js:11
t.fetch @ _app-e8cd1b69c02bbb86.js:14
t.reobserveAsConcast @ _app-e8cd1b69c02bbb86.js:14
e.executeQuery @ _app-e8cd1b69c02bbb86.js:26
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ 7447-58fd4ae583d8d5e7.js:1
(anonymous) @ 9303-d31bbf07f3e616c4.js:1
t.trigger @ 9303-d31bbf07f3e616c4.js:1
(anonymous) @ 9303-d31bbf07f3e616c4.js:1
(anonymous) @ main-0c8f5f7f56686043.js:1
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1Understand this error
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-26: {dayChecking: '2025-06-26', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-26', isMatch: true}
eruda.js:2 🔍 CYCLE UTILS DEBUG - Phase calculation for cycle 160: {dayInCycle: 26, cycleLength: 28, periodEnd: '2025-06-04', aboutToCallGetCycleDisplayInfo: true}
eruda.js:2 🔍 EMOJI DEBUG - getDetailedCyclePhase result: {dayInCycle: 26, cycleLength: 28, periodLength: 4, detailedPhase: {…}}
eruda.js:2 🔍 CYCLE TRACKER - Using cycle 160 for today (2025-06-26): {day: 26, phase: 'luteal', emoji: '🌙', cycleStart: '2025-06-01', cycleEnd: '2025-06-28'}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-02: {dayChecking: '2025-06-02', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-02', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-03: {dayChecking: '2025-06-03', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-03', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-04: {dayChecking: '2025-06-04', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-04', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-05: {dayChecking: '2025-06-05', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-05', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-06: {dayChecking: '2025-06-06', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-06', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-07: {dayChecking: '2025-06-07', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-07', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-08: {dayChecking: '2025-06-08', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-08', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-09: {dayChecking: '2025-06-09', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-09', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-10: {dayChecking: '2025-06-10', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-10', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-11: {dayChecking: '2025-06-11', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-11', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-12: {dayChecking: '2025-06-12', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-12', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-13: {dayChecking: '2025-06-13', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-13', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-14: {dayChecking: '2025-06-14', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-14', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-15: {dayChecking: '2025-06-15', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-15', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-16: {dayChecking: '2025-06-16', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-16', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-17: {dayChecking: '2025-06-17', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-17', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-18: {dayChecking: '2025-06-18', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-18', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-19: {dayChecking: '2025-06-19', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-19', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-20: {dayChecking: '2025-06-20', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-20', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-21: {dayChecking: '2025-06-21', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-21', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-22: {dayChecking: '2025-06-22', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-22', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-23: {dayChecking: '2025-06-23', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-23', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-24: {dayChecking: '2025-06-24', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-24', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-25: {dayChecking: '2025-06-25', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-25', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-26: {dayChecking: '2025-06-26', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-26', isMatch: true}
eruda.js:2 🔍 CYCLE UTILS DEBUG - Phase calculation for cycle 160: {dayInCycle: 26, cycleLength: 28, periodEnd: '2025-06-04', aboutToCallGetCycleDisplayInfo: true}
eruda.js:2 🔍 EMOJI DEBUG - getDetailedCyclePhase result: {dayInCycle: 26, cycleLength: 28, periodLength: 4, detailedPhase: {…}}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-27: {dayChecking: '2025-06-27', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-27', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-28: {dayChecking: '2025-06-28', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-28', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-30: {dayChecking: '2025-06-30', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-30', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-06-30', isMatch: true}
eruda.js:2 Theme context initial load: minimalist
eruda.js:2 🔥 STATE DEBUG - isSubmitting changed: false
eruda.js:2 🔥 STATE DEBUG - connectionId changed: 2 selectedConnectionId: null
eruda.js:2 Modal useEffect - selectedDate from context: null
eruda.js:2 Modal useEffect - editingMoment: null
eruda.js:2 Modal useEffect - momentModalOpen: false
eruda.js:2 🔥 MODAL OPEN - Resetting isSubmitting to false
eruda.js:2 🔥 MODAL INIT - Setting connectionId: 2 from selectedConnectionId: null
eruda.js:2 🔥 PLAN MODAL - Connection effect: {selectedConnection: null, localSelectedConnection: null, isOpen: false}
eruda.js:2 🔥 PLAN MODAL - Form init effect: {editingMoment: false, isOpen: false, selectedConnection: null, contextSelectedDate: null, connectionsCount: 20}
eruda.js:2 Focus Context Debug: {savedId: '30', connectionsLength: 20, connections: Array(20)}
eruda.js:2 Found saved connection: {id: 30, userId: '8', name: 'ghjghjhgjg', profileImage: null, relationshipStage: 'Dating', …}
eruda.js:2 Theme effect running: minimalist
eruda.js:2 Applied minimalist theme (light base)
eruda.js:2 Theme stored to localStorage: minimalist
eruda.js:2 Auth: Starting to load user, setting loading to true
eruda.js:2 getCurrentUser successful: {id: '8', email: 'jagohtrade@gmail.com', firstName: null, lastName: null, profileImageUrl: null, …}
eruda.js:2 getCurrentUser successful: {id: '8', email: 'jagohtrade@gmail.com', firstName: null, lastName: null, profileImageUrl: null, …}
eruda.js:2 Auth context setting user: {id: '8', email: 'jagohtrade@gmail.com', firstName: null, lastName: null, profileImageUrl: null, …}
eruda.js:2 Auth: Finally block - setting loading to false
frame_ant.js:2 Uncaught (in promise) AbortError: The user aborted a request.
e @ frame_ant.js:2
s @ frame_ant.js:2
Promise.then
e @ frame_ant.js:2
u @ frame_ant.js:2
Promise.then
e @ frame_ant.js:2
u @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
s @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
(anonymous) @ _app-e8cd1b69c02bbb86.js:38
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
e.consumeQueue @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
n @ _app-e8cd1b69c02bbb86.js:38
setTimeout
(anonymous) @ _app-e8cd1b69c02bbb86.js:38
e.scheduleQueueConsumption @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
e.try @ _app-e8cd1b69c02bbb86.js:25
e.start @ _app-e8cd1b69c02bbb86.js:25
t.request @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
e.execute @ _app-e8cd1b69c02bbb86.js:14
e.getObservableFromLink @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:11
s @ _app-e8cd1b69c02bbb86.js:11
e.mutate @ _app-e8cd1b69c02bbb86.js:11
e.mutate @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:40
(anonymous) @ main-0c8f5f7f56686043.js:1
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
(anonymous) @ main-0c8f5f7f56686043.js:1
(anonymous) @ main-0c8f5f7f56686043.js:1
n @ _app-e8cd1b69c02bbb86.js:38Understand this error
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-26: {dayChecking: '2025-06-26', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-26', isMatch: true}
eruda.js:2 🔍 CYCLE UTILS DEBUG - Phase calculation for cycle 160: {dayInCycle: 26, cycleLength: 28, periodEnd: '2025-06-04', aboutToCallGetCycleDisplayInfo: true}
eruda.js:2 🔍 EMOJI DEBUG - getDetailedCyclePhase result: {dayInCycle: 26, cycleLength: 28, periodLength: 4, detailedPhase: {…}}
eruda.js:2 🔍 CYCLE TRACKER - Using cycle 160 for today (2025-06-26): {day: 26, phase: 'luteal', emoji: '🌙', cycleStart: '2025-06-01', cycleEnd: '2025-06-28'}
eruda.js:2 🔍 CYCLE TRACKER DEBUG - Connection 30: {avgCycleLength: 28, currentDay: 26, periodLength: 4, ovulationDay: 14, currentCycleId: 160, …}
eruda.js:2 🔍 EMOJI RENDER DEBUG: {hasCurrentPhaseInfo: true, hasDetailedInfo: true, emoji: '🌙', phase: 'luteal', shouldShowEmoji: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-02: {dayChecking: '2025-06-02', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-02', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-03: {dayChecking: '2025-06-03', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-03', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-04: {dayChecking: '2025-06-04', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-04', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-05: {dayChecking: '2025-06-05', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-05', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-06: {dayChecking: '2025-06-06', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-06', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-07: {dayChecking: '2025-06-07', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-07', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-08: {dayChecking: '2025-06-08', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-08', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-09: {dayChecking: '2025-06-09', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-09', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-10: {dayChecking: '2025-06-10', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-10', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-11: {dayChecking: '2025-06-11', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-11', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-12: {dayChecking: '2025-06-12', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-12', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-13: {dayChecking: '2025-06-13', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-13', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-14: {dayChecking: '2025-06-14', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-14', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-15: {dayChecking: '2025-06-15', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-15', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-16: {dayChecking: '2025-06-16', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-16', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-17: {dayChecking: '2025-06-17', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-17', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-18: {dayChecking: '2025-06-18', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-18', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-19: {dayChecking: '2025-06-19', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-19', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-20: {dayChecking: '2025-06-20', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-20', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-21: {dayChecking: '2025-06-21', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-21', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-22: {dayChecking: '2025-06-22', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-22', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-23: {dayChecking: '2025-06-23', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-23', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-24: {dayChecking: '2025-06-24', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-24', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-25: {dayChecking: '2025-06-25', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-25', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-26: {dayChecking: '2025-06-26', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-26', isMatch: true}
eruda.js:2 🔍 CYCLE UTILS DEBUG - Phase calculation for cycle 160: {dayInCycle: 26, cycleLength: 28, periodEnd: '2025-06-04', aboutToCallGetCycleDisplayInfo: true}
eruda.js:2 🔍 EMOJI DEBUG - getDetailedCyclePhase result: {dayInCycle: 26, cycleLength: 28, periodLength: 4, detailedPhase: {…}}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-27: {dayChecking: '2025-06-27', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-27', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-28: {dayChecking: '2025-06-28', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-28', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-30: {dayChecking: '2025-06-30', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-30', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-06-30', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-26: {dayChecking: '2025-06-26', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-26', isMatch: true}
eruda.js:2 🔍 CYCLE UTILS DEBUG - Phase calculation for cycle 160: {dayInCycle: 26, cycleLength: 28, periodEnd: '2025-06-04', aboutToCallGetCycleDisplayInfo: true}
eruda.js:2 🔍 EMOJI DEBUG - getDetailedCyclePhase result: {dayInCycle: 26, cycleLength: 28, periodLength: 4, detailedPhase: {…}}
eruda.js:2 🔍 CYCLE TRACKER - Using cycle 160 for today (2025-06-26): {day: 26, phase: 'luteal', emoji: '🌙', cycleStart: '2025-06-01', cycleEnd: '2025-06-28'}
eruda.js:2 🔍 CYCLE TRACKER DEBUG - Connection 30: {avgCycleLength: 28, currentDay: 26, periodLength: 4, ovulationDay: 14, currentCycleId: 160, …}
eruda.js:2 🔍 EMOJI RENDER DEBUG: {hasCurrentPhaseInfo: true, hasDetailedInfo: true, emoji: '🌙', phase: 'luteal', shouldShowEmoji: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-02: {dayChecking: '2025-06-02', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-02', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-03: {dayChecking: '2025-06-03', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-03', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-04: {dayChecking: '2025-06-04', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-04', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-05: {dayChecking: '2025-06-05', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-05', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-06: {dayChecking: '2025-06-06', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-06', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-07: {dayChecking: '2025-06-07', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-07', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-08: {dayChecking: '2025-06-08', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-08', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-09: {dayChecking: '2025-06-09', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-09', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-10: {dayChecking: '2025-06-10', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-10', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-11: {dayChecking: '2025-06-11', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-11', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-12: {dayChecking: '2025-06-12', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-12', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-13: {dayChecking: '2025-06-13', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-13', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-14: {dayChecking: '2025-06-14', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-14', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-15: {dayChecking: '2025-06-15', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-15', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-16: {dayChecking: '2025-06-16', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-16', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-17: {dayChecking: '2025-06-17', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-17', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-18: {dayChecking: '2025-06-18', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-18', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-19: {dayChecking: '2025-06-19', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-19', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-20: {dayChecking: '2025-06-20', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-20', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-21: {dayChecking: '2025-06-21', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-21', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-22: {dayChecking: '2025-06-22', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-22', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-23: {dayChecking: '2025-06-23', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-23', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-24: {dayChecking: '2025-06-24', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-24', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-25: {dayChecking: '2025-06-25', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-25', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-26: {dayChecking: '2025-06-26', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-26', isMatch: true}
eruda.js:2 🔍 CYCLE UTILS DEBUG - Phase calculation for cycle 160: {dayInCycle: 26, cycleLength: 28, periodEnd: '2025-06-04', aboutToCallGetCycleDisplayInfo: true}
eruda.js:2 🔍 EMOJI DEBUG - getDetailedCyclePhase result: {dayInCycle: 26, cycleLength: 28, periodLength: 4, detailedPhase: {…}}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-27: {dayChecking: '2025-06-27', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-27', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-28: {dayChecking: '2025-06-28', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-28', isMatch: true}
eruda.js:2 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-30: {dayChecking: '2025-06-30', availableCycles: Array(3)}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-30', isMatch: false}
eruda.js:2 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-06-30', isMatch: true}
eruda.js:2 [vite] server connection lost. Polling for restart...
frame_ant.js:2 Uncaught (in promise) AbortError: The user aborted a request.
e @ frame_ant.js:2
s @ frame_ant.js:2
Promise.then
e @ frame_ant.js:2
u @ frame_ant.js:2
Promise.then
e @ frame_ant.js:2
u @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
s @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
(anonymous) @ _app-e8cd1b69c02bbb86.js:38
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
e.consumeQueue @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
n @ _app-e8cd1b69c02bbb86.js:38
setTimeout
(anonymous) @ _app-e8cd1b69c02bbb86.js:38
e.scheduleQueueConsumption @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
e.try @ _app-e8cd1b69c02bbb86.js:25
e.start @ _app-e8cd1b69c02bbb86.js:25
t.request @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
e.execute @ _app-e8cd1b69c02bbb86.js:14
e.getObservableFromLink @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:11
s @ _app-e8cd1b69c02bbb86.js:11
e.mutate @ _app-e8cd1b69c02bbb86.js:11
e.mutate @ _app-e8cd1b69c02bbb86.js:11
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ 7447-58fd4ae583d8d5e7.js:1
(anonymous) @ main-0c8f5f7f56686043.js:1
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
(anonymous) @ main-0c8f5f7f56686043.js:1
(anonymous) @ main-0c8f5f7f56686043.js:1
(anonymous) @ 7447-58fd4ae583d8d5e7.js:1
oO @ framework-0e64ecd5aaccf18c.js:1
uB @ framework-0e64ecd5aaccf18c.js:1
u_ @ framework-0e64ecd5aaccf18c.js:1
r6 @ framework-0e64ecd5aaccf18c.js:1
(anonymous) @ framework-0e64ecd5aaccf18c.js:1
uO @ framework-0e64ecd5aaccf18c.js:1
uS @ framework-0e64ecd5aaccf18c.js:1
C @ framework-0e64ecd5aaccf18c.js:1
z @ framework-0e64ecd5aaccf18c.js:1
(anonymous) @ setImmediate.js:40
y @ setImmediate.js:69
c @ setImmediate.js:109
postMessage
n @ setImmediate.js:120
push.YBdB.f.setImmediate @ setImmediate.js:27
r @ framework-0e64ecd5aaccf18c.js:1
z @ framework-0e64ecd5aaccf18c.js:1
(anonymous) @ setImmediate.js:40
y @ setImmediate.js:69
c @ setImmediate.js:109
postMessage
n @ setImmediate.js:120
push.YBdB.f.setImmediate @ setImmediate.js:27
r @ framework-0e64ecd5aaccf18c.js:1
I @ framework-0e64ecd5aaccf18c.js:1
t.unstable_scheduleCallback @ framework-0e64ecd5aaccf18c.js:1
uw @ framework-0e64ecd5aaccf18c.js:1
uk @ framework-0e64ecd5aaccf18c.js:1
lH @ framework-0e64ecd5aaccf18c.js:1
(anonymous) @ 9303-d31bbf07f3e616c4.js:1
n @ _app-e8cd1b69c02bbb86.js:11
update @ _app-e8cd1b69c02bbb86.js:11
m @ 7447-58fd4ae583d8d5e7.js:1
(anonymous) @ 7447-58fd4ae583d8d5e7.js:1
l.emit @ 2656-9a1010accad520d2.js:1
(anonymous) @ 8830-dd20f3f5b16ef9ba.js:1
(anonymous) @ 2656-9a1010accad520d2.js:1
handleCommand @ 2656-9a1010accad520d2.js:1
onSocketMessage @ 2656-9a1010accad520d2.js:1Understand this error
Console.js:61 Theme context initial load: minimalist
Console.js:61 Theme context initial load: minimalist
Console.js:61 🔥 STATE DEBUG - isSubmitting changed: false
Console.js:61 🔥 STATE DEBUG - connectionId changed: 2 selectedConnectionId: null
Console.js:61 Modal useEffect - selectedDate from context: null
Console.js:61 Modal useEffect - editingMoment: null
Console.js:61 Modal useEffect - momentModalOpen: false
Console.js:61 🔥 MODAL OPEN - Resetting isSubmitting to false
Console.js:61 🔥 MODAL INIT - Setting connectionId: 2 from selectedConnectionId: null
Console.js:61 🔥 PLAN MODAL - Connection effect: {selectedConnection: null, localSelectedConnection: null, isOpen: false}
Console.js:61 🔥 PLAN MODAL - Form init effect: {editingMoment: false, isOpen: false, selectedConnection: null, contextSelectedDate: null, connectionsCount: 0}
Console.js:61 Theme effect running: minimalist
Console.js:61 Applied minimalist theme (light base)
Console.js:61 Theme stored to localStorage: minimalist
Console.js:61 Auth: Starting to load user, setting loading to true
Console.js:61 Auth: Starting to load user, setting loading to true
Console.js:61 Theme effect running: minimalist
Console.js:61 Applied minimalist theme (light base)
Console.js:61 Theme stored to localStorage: minimalist
Console.js:61 🔥 PLAN MODAL - Form init effect: {editingMoment: false, isOpen: false, selectedConnection: null, contextSelectedDate: null, connectionsCount: 0}
Console.js:61 🔥 PLAN MODAL - Form init effect: {editingMoment: false, isOpen: false, selectedConnection: null, contextSelectedDate: null, connectionsCount: 20}
Console.js:61 Focus Context Debug: {savedId: '30', connectionsLength: 20, connections: Array(20)}
Console.js:61 Found saved connection: {id: 30, userId: '8', name: 'ghjghjhgjg', profileImage: null, relationshipStage: 'Dating', …}
Console.js:61 getCurrentUser successful: {id: '8', email: 'jagohtrade@gmail.com', firstName: null, lastName: null, profileImageUrl: null, …}
Console.js:61 getCurrentUser successful: {id: '8', email: 'jagohtrade@gmail.com', firstName: null, lastName: null, profileImageUrl: null, …}
Console.js:61 Auth context setting user: {id: '8', email: 'jagohtrade@gmail.com', firstName: null, lastName: null, profileImageUrl: null, …}
Console.js:61 Auth: Finally block - setting loading to false
Console.js:61 getCurrentUser successful: {id: '8', email: 'jagohtrade@gmail.com', firstName: null, lastName: null, profileImageUrl: null, …}
Console.js:61 getCurrentUser successful: {id: '8', email: 'jagohtrade@gmail.com', firstName: null, lastName: null, profileImageUrl: null, …}
Console.js:61 Auth context setting user: {id: '8', email: 'jagohtrade@gmail.com', firstName: null, lastName: null, profileImageUrl: null, …}
Console.js:61 Auth: Finally block - setting loading to false
frame_ant.js:2 Uncaught (in promise) AbortError: The user aborted a request.
e @ frame_ant.js:2
s @ frame_ant.js:2
Promise.then
e @ frame_ant.js:2
u @ frame_ant.js:2
Promise.then
e @ frame_ant.js:2
u @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
s @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
(anonymous) @ _app-e8cd1b69c02bbb86.js:38
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
e.consumeQueue @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
n @ _app-e8cd1b69c02bbb86.js:38
setTimeout
(anonymous) @ _app-e8cd1b69c02bbb86.js:38
e.scheduleQueueConsumption @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
e.try @ _app-e8cd1b69c02bbb86.js:25
e.start @ _app-e8cd1b69c02bbb86.js:25
t.request @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
e.execute @ _app-e8cd1b69c02bbb86.js:14
e.getObservableFromLink @ _app-e8cd1b69c02bbb86.js:11
e.getResultsFromLink @ _app-e8cd1b69c02bbb86.js:11
v @ _app-e8cd1b69c02bbb86.js:11
e.fetchQueryByPolicy @ _app-e8cd1b69c02bbb86.js:11
v @ _app-e8cd1b69c02bbb86.js:11
e.fetchConcastWithInfo @ _app-e8cd1b69c02bbb86.js:11
t.fetch @ _app-e8cd1b69c02bbb86.js:14
t.reobserveAsConcast @ _app-e8cd1b69c02bbb86.js:14
e.executeQuery @ _app-e8cd1b69c02bbb86.js:26
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:40
(anonymous) @ main-0c8f5f7f56686043.js:1
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
(anonymous) @ main-0c8f5f7f56686043.js:1
(anonymous) @ main-0c8f5f7f56686043.js:1
(anonymous) @ _app-e8cd1b69c02bbb86.js:40
(anonymous) @ _app-e8cd1b69c02bbb86.js:40
(anonymous) @ main-0c8f5f7f56686043.js:1
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
(anonymous) @ main-0c8f5f7f56686043.js:1
(anonymous) @ main-0c8f5f7f56686043.js:1
n @ _app-e8cd1b69c02bbb86.js:38Understand this error
frame_ant.js:2 Uncaught (in promise) AbortError: The user aborted a request.
e @ frame_ant.js:2
s @ frame_ant.js:2
Promise.then
e @ frame_ant.js:2
u @ frame_ant.js:2
Promise.then
e @ frame_ant.js:2
u @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
s @ frame_ant.js:2
(anonymous) @ frame_ant.js:2
(anonymous) @ _app-e8cd1b69c02bbb86.js:38
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
e.consumeQueue @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
n @ _app-e8cd1b69c02bbb86.js:38
setTimeout
(anonymous) @ _app-e8cd1b69c02bbb86.js:38
e.scheduleQueueConsumption @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
e @ _app-e8cd1b69c02bbb86.js:14
t.subscribe @ _app-e8cd1b69c02bbb86.js:14
e.try @ _app-e8cd1b69c02bbb86.js:25
e.start @ _app-e8cd1b69c02bbb86.js:25
t.request @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ _app-e8cd1b69c02bbb86.js:25
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
e.execute @ _app-e8cd1b69c02bbb86.js:14
e.getObservableFromLink @ _app-e8cd1b69c02bbb86.js:11
e.getResultsFromLink @ _app-e8cd1b69c02bbb86.js:11
v @ _app-e8cd1b69c02bbb86.js:11
e.fetchQueryByPolicy @ _app-e8cd1b69c02bbb86.js:11
v @ _app-e8cd1b69c02bbb86.js:11
e.fetchConcastWithInfo @ _app-e8cd1b69c02bbb86.js:11
t.fetch @ _app-e8cd1b69c02bbb86.js:14
t.reobserveAsConcast @ _app-e8cd1b69c02bbb86.js:14
e.executeQuery @ _app-e8cd1b69c02bbb86.js:26
(anonymous) @ _app-e8cd1b69c02bbb86.js:14
(anonymous) @ 7447-58fd4ae583d8d5e7.js:1
(anonymous) @ 9303-d31bbf07f3e616c4.js:1
t.trigger @ 9303-d31bbf07f3e616c4.js:1
(anonymous) @ 9303-d31bbf07f3e616c4.js:1
(anonymous) @ main-0c8f5f7f56686043.js:1
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1
Promise.then
n @ main-0c8f5f7f56686043.js:1
u @ main-0c8f5f7f56686043.js:1Understand this error
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-26: {dayChecking: '2025-06-26', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-26', isMatch: true}
Console.js:61 🔍 CYCLE UTILS DEBUG - Phase calculation for cycle 160: {dayInCycle: 26, cycleLength: 28, periodEnd: '2025-06-04', aboutToCallGetCycleDisplayInfo: true}
Console.js:61 🔍 EMOJI DEBUG - getDetailedCyclePhase result: {dayInCycle: 26, cycleLength: 28, periodLength: 4, detailedPhase: {…}}
Console.js:61 🔍 CYCLE TRACKER - Using cycle 160 for today (2025-06-26): {day: 26, phase: 'luteal', emoji: '🌙', cycleStart: '2025-06-01', cycleEnd: '2025-06-28'}
Console.js:61 🔍 CYCLE TRACKER DEBUG - Connection 30: {avgCycleLength: 28, currentDay: 26, periodLength: 4, ovulationDay: 14, currentCycleId: 160, …}
Console.js:61 🔍 EMOJI RENDER DEBUG: {hasCurrentPhaseInfo: true, hasDetailedInfo: true, emoji: '🌙', phase: 'luteal', shouldShowEmoji: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-02: {dayChecking: '2025-06-02', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-02', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-03: {dayChecking: '2025-06-03', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-03', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-04: {dayChecking: '2025-06-04', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-04', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-05: {dayChecking: '2025-06-05', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-05', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-06: {dayChecking: '2025-06-06', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-06', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-07: {dayChecking: '2025-06-07', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-07', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-08: {dayChecking: '2025-06-08', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-08', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-09: {dayChecking: '2025-06-09', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-09', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-10: {dayChecking: '2025-06-10', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-10', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-11: {dayChecking: '2025-06-11', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-11', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-12: {dayChecking: '2025-06-12', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-12', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-13: {dayChecking: '2025-06-13', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-13', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-14: {dayChecking: '2025-06-14', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-14', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-15: {dayChecking: '2025-06-15', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-15', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-16: {dayChecking: '2025-06-16', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-16', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-17: {dayChecking: '2025-06-17', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-17', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-18: {dayChecking: '2025-06-18', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-18', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-19: {dayChecking: '2025-06-19', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-19', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-20: {dayChecking: '2025-06-20', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-20', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-21: {dayChecking: '2025-06-21', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-21', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-22: {dayChecking: '2025-06-22', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-22', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-23: {dayChecking: '2025-06-23', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-23', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-24: {dayChecking: '2025-06-24', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-24', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-25: {dayChecking: '2025-06-25', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-25', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-26: {dayChecking: '2025-06-26', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-26', isMatch: true}
Console.js:61 🔍 CYCLE UTILS DEBUG - Phase calculation for cycle 160: {dayInCycle: 26, cycleLength: 28, periodEnd: '2025-06-04', aboutToCallGetCycleDisplayInfo: true}
Console.js:61 🔍 EMOJI DEBUG - getDetailedCyclePhase result: {dayInCycle: 26, cycleLength: 28, periodLength: 4, detailedPhase: {…}}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-27: {dayChecking: '2025-06-27', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-27', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-28: {dayChecking: '2025-06-28', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-28', isMatch: true}
Console.js:61 🔍 CYCLE PHASE DEBUG - Finding cycle for 2025-06-30: {dayChecking: '2025-06-30', availableCycles: Array(3)}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 160: {cycleStart: '2025-06-01', cycleEnd: '2025-06-28', dayToCheck: '2025-06-30', isMatch: false}
Console.js:61 🔍 CYCLE MATCH TEST - Cycle 185: {cycleStart: '2025-06-29', cycleEnd: '2025-07-26', dayToCheck: '2025-06-30', isMatch: true}